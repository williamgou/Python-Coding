#0、加载相关模块
from sklearn.datasets import load_iris
from sklearn.naive_bayes import GaussianNB
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
#1、加载数据
iris = load_iris()
#1.1、数据预览
print('特征名称：', iris.feature_names)
#print(type(iris))
print(iris.data[:5])
# 打印类别数据
print('类别：', iris.target_names)
#数据中的花儿类别一共有三种
#是山鸢尾（setosa）、变色鸢尾（versicolor）、弗吉尼亚鸢尾（virginica）
print(iris.target[:5])
#1.2、数据处理
# 把iris中的特征和类别分别赋值给X和y
X = iris.data
y = iris.target

# 调用train_test_split方法将数据集划分为训练集（X_train以及y_train)和测试集(X_test以及y_test)
X_train, X_test, y_train, y_test = train_test_split(X, y,
                                                    test_size=1/4,  # 25% 数据用于测试集
                                                    random_state=0)

print('数据集样本数：{}，训练集样本数：{}，测试集样本数：{}'.format(len(X), len(X_train), len(X_test)))
#2、建立模型
knn_model = KNeighborsClassifier(n_neighbors=5)
#3、训练 
knn_model.fit(X_train, y_train)
#4、测试 
acc = knn_model.score(X_test, y_test)
print('模型在测试集准确率:{:.3f}'.format(acc))
